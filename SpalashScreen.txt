//xml code 

<?xml version="1.0" encoding="utf-8"?>
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">
    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:id="@+id/constraint_id"
        android:layout_height="match_parent"
        android:background="@drawable/splash_pg_new"
        android:orientation="vertical">

        <ImageView

            android:id="@+id/img_logo"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            android:layout_gravity="center_vertical"
            app:srcCompat="@drawable/ic_logo_name_wiht"
            android:layout_width="198dp"
            android:layout_height="121dp"/>

        <TextView
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            android:layout_width="wrap_content"
            app:layout_constraintTop_toBottomOf="@id/img_logo"
            android:text="@string/app_name"
            android:textSize="38dp"
            android:visibility="gone"
            android:id="@+id/splash_txv_appnameID"
            android:textStyle="bold"
            android:textColor="@color/white"
            android:textAllCaps="true"
            android:layout_marginTop="@dimen/margin_small"
            android:layout_height="wrap_content"/>

        <TextView
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintTop_toBottomOf="@id/splash_txv_appnameID"
            android:text="an eLearning platform"
            android:textColor="@color/white"
            android:textSize="15dp"
            android:layout_width="170dp"
            android:textAlignment="center"
            android:layout_height="wrap_content"/>




    </androidx.constraintlayout.widget.ConstraintLayout>


</layout>


//Activity code 
package com.bidyava.solutions.ui

import android.content.Context
import android.content.Intent
import android.graphics.Color
import android.graphics.drawable.AnimatedVectorDrawable
import android.os.Build
import android.os.Bundle
import android.os.CountDownTimer
import android.view.animation.*
import androidx.appcompat.app.AppCompatActivity
import androidx.appcompat.app.AppCompatDelegate
import androidx.databinding.DataBindingUtil
import androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
import com.bidyava.solutions.MyApplication
import com.bidyava.solutions.R
import com.bidyava.solutions.databinding.ActivitySplashScreenBinding
import com.bidyava.solutions.ui.Dashboard.DashboardActivity
import com.bidyava.solutions.ui.landingpage.LandingActivity
import com.bidyava.solutions.utils.UserSharedPreference
import com.bumptech.glide.Glide
import com.bumptech.glide.request.RequestOptions
import kotlinx.coroutines.*
import javax.inject.Inject

class SplashScreenActivity : AppCompatActivity() {

    lateinit var binding: ActivitySplashScreenBinding
    lateinit var job: CoroutineScope
    @Inject
    lateinit var userSharedPreference: UserSharedPreference
    override fun onCreate(savedInstanceState: Bundle?) {
        (applicationContext as MyApplication).appGraph.inject(this)
        super.onCreate(savedInstanceState)
        binding = DataBindingUtil.setContentView(this, R.layout.activity_splash_screen)
        AppCompatDelegate.setCompatVectorFromResourcesEnabled(true);

       /* val fadeIn = AlphaAnimation(0f, 1f)
        fadeIn.interpolator = DecelerateInterpolator() // add this
        fadeIn.duration = 1000

        val fadeOut = AlphaAnimation(1f, 0f)
        fadeOut.interpolator = AccelerateInterpolator() // and this
        fadeOut.startOffset = 1000
        fadeOut.duration = 1000*/

       /* val animation = AnimationSet(false) // change to false
        animation.addAnimation(fadeIn)
        animation.addAnimation(fadeOut)
        binding.imgLogo.animation = animation*/
        setLogoAnimjob()
        object : CountDownTimer(3000, 1000) {
            override fun onTick(millisUntilFinished: Long) {

            }

            override fun onFinish() {
                try {
                    if (userSharedPreference.getUser() == null ||
                        userSharedPreference.getToken().toString().isEmpty()
                    ) {

                        startActivity(Intent(applicationContext, LandingActivity::class.java))
                    } else {
                        // Toast.makeText(applicationContext, userSharedPreference.getToken().toString()+"00", Toast.LENGTH_SHORT).show()

                        startActivity(Intent(applicationContext, DashboardActivity::class.java))
                    }
                } catch (e: Exception) {}
            }
        }.start()

        /*    CoroutineScope(Dispatchers.Main).launch {

                if(!userSharedPreference.getToken().toString().isNullOrEmpty()){
                    startActivity(Intent(applicationContext,DashboardActivity::class.java))
                }else{
                    startActivity(Intent(applicationContext,LandingActivity::class.java))
                }

                delay(5000)



            }*/
    }

    override fun onResume() {
        super.onResume()
        if (Build.VERSION.SDK_INT >= 24) {
            binding.constraintId.setBackgroundResource(R.drawable.ic_splash_bg_new)
        }
    }


    private fun setLogoAnimjob() {
        job = CoroutineScope(Dispatchers.Main)


        job.launch {

            while (isActive) {

                delay(5000)

            }

        }
        binding.imgLogo.startAnimation(AnimationUtils.loadAnimation(this, R.anim.slide_in_top))


        Color.TRANSPARENT
        job.cancel()




    }

}
